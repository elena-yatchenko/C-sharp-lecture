// // See https://aka.ms/new-console-template for more information
// // Console.WriteLine("Hello, World!");

// // Создаём первый проект
// // Перейдём на вкладку «Explorer» и нажмем кнопку «open folder». Далее мы можем создать новую папку.
// // Пусть это будет папка будет называться «Examples». Добавим её в наше рабочее пространство.
// // Следующим шагом в рамках текущей папки сделаем следующее: запустим терминал и напишем
// // команду “git init”. Далее правой кнопкой в рамках текущей папки мы создадим новую папку. Это будет
// // наш первый проект «Example001», назовем его «HelloConsole». Следующим этапом, можно в терминале
// // набрать «change directory» и перейти в эту папку. Либо нажать правой кнопкой и выбрать "открыть в
// // интегрированном терминале". 

// // Обратите внимание, что открывается новая копия терминала. Для того,
// // чтобы подготовить эту папку для написания проекта, нужно ввести следующую команду: «dotnet new
// // console». Это будет подготовкой к созданию нового проекта. После осуществления данных действий, вы
// // увидите, что в папке происходит создание проекта. Добавляется некоторое количество
// // конфигурационных файлов. Большая часть из них не являются важными. Для нас важным является файл
// // «Program.cs». В нем содержится основной код нашего приложения.

// // Новые слова

// // ● Dotnet new console — эта команда нужна, чтобы создать новый проект.
// // ● Dotnet run — эта команда нужна, чтобы запустить проект. 
// // ● Через Console мы обращаемся к окну терминала.
// // ● С помощью «WriteLine» можем в консоли данные выводить.

// Console.WriteLine("Введите Ваше имя ");
// string username = Console.ReadLine();
// Console.WriteLine("Привет, ");
// Console.WriteLine(username);

// // Следующая команда, которая вам может пригодиться. Помимо Сonsole.WriteLine, которая просто
// // выводит текст в наш терминал и переводит курсор на новую строку, то есть мы начинаем писать с новой
// // строчки. Есть ещё команда Сonsole.Write воспользуемся ей и перезапустим наше приложение. Сделаем
// // так и после нажатия на Enter у нас всё выводится в одну строку.
// Console.Write("Введите Ваше имя ");
// string username = Console.ReadLine();
// Console.Write("Привет, ");
// Console.Write(usrname);

// // Новые слова

// // ● WriteLine — вывод в консоль с переходом на новую строку.
// // ● Write — это вывод в консоль без перехода на новую строку.
// // ● ReadLine — позволяет считывать данные из нашего терминала

// int numberA = 31;
// int numberВ = 5;
// int result = numberA + numberВ;
// Console.WriteLine(result);

// int numberA = 10;
// int numberB = 5;
// Console.WriteLine(numberA / numberB);

// double numberA = 12;
// double numberB = 5;
// Console.WriteLine(numberA / numberB);

// // Генератор псевдослучайных чисел

// Int numberA = new Random().Next(1, 10);
// Console.WriteLine(numberA);
// Int numberB = new Random().Next(1, 10);
// Console.WriteLine(numberВ);
// Int result = numberA + numberB;
// Console.WriteLine(result);

// // Код для персонального приветствия

// Console.Write("Введите имя пользователя: ");
// string username = Console.ReadLine();
// if(username.ToLower() == "Маша") // переводим все символы в нижний регистр
// {
//     Сonsole.WriteLine("Ура, это же МАША");
// }
// else
// {
//     Сonsole.Write("Привет, ");
//     Сonsole.WriteLine(username);
// }


// ЗАДАЧА С ТОЧКАМИ

// Возьмём 3 точки. Для нас это будет треугольник. Выберем две случайных точки и найдём середину
// отрезка, соединяющего их. Отрезок не нужен, нам потребуется исключительно точка. Поставим её. На
// следующем этапе снова выберем какую-то из точек – вершин треугольника, снова найдём середину
// получившегося отрезка и поставим точку. От этой точки определим, какую-то случайную вершину,
// снова найдём середину, снова поставим точку и т. д.

Console.Clear();
// Console.SetCursorPosition(10, 4);
// Console.WriteLine("+");

// команда Console.SetCursorPosition, в качестве аргументов мы указываем отступ от левого края и отступ от
// верхнего края

int xa = 40;
int ya = 1;
int xb = 1;
int yb = 30;
int xc = 80;
int yc = 30;

Console.SetCursorPosition(xa, ya);
Console.WriteLine("+");
Console.SetCursorPosition(xb, yb);
Console.WriteLine("+");
Console.SetCursorPosition(xc, yc);
Console.WriteLine("+");

// Далее наши действия здесь заключаются в том, чтобы сгенерировать какое-то случайное число. Пусть оно
// будет называться «what». Делать мы это будем при помощи генератора псевдослучайных чисел. Мы
// будем выбирать одну из трёх точек, поэтому диапазон чисел нам нужно указать, как (0, 3). Напоминаю,
// что в этом случае у нас будет такой вот полуинтервал [0; 3), и могут выдаваться числа 0, 1 или 2.

// После того, как мы определили случайное число, будем выполнять проверку. Если число what = 0, то в
// этом случае мы должны будем в икс положить cередину отрезка (считается это как x + хa на первой
// вершине, делённое пополам), и аналогичным образом будет для y: (y + ya)/2.

int x = xa, y = ya;
int count = 0;
while (count < 10000)
{
    int what = new Random().Next(0, 3);
    if (what == 0)
    {
        x = (x + xa) / 2;
        y = (y + ya) / 2;
    }
    if (what == 1)
    {
        x = (x + xb) / 2;
        y = (y + yb) / 2;
    }
    if (what == 2)
    {
        x = (x + xc) / 2;
        y = (y + yc) / 2;
    }
    Console.SetCursorPosition(x, y);
    Console.WriteLine("+");
    count ++;
}
